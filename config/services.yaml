# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
        android.app.controller.token: '%env(ANDROID_APP_CONTROLLER_TOKEN)%'
        android.app.api.vijesti.read: '%env(ANDROID_APP_API_VIJESTI_READ)%'
        android.app.api.raspored.all: '%env(ANDROID_APP_API_RASPORED_ALL)%'
        android.app.api.raspored.today: '%env(ANDROID_APP_API_RASPORED_TODAY)%'
        # hours before event start to send notification
        android.app.event.time.offset: '-3'
        # max results in website api response
        android.app.results.limit: '3'
        android.app.topic: '%env(ANDROID_APP_TOPIC)%'
        android.app.firebase.url: '%env(ANDROID_APP_FIREBASE_URL)%'
        android.app.firebase.token: '%env(ANDROID_APP_FIREBASE_TOKEN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    entity_normalizer:
        class: App\Normalizer\EntityNormalizer
        public: false
        autowire: true
        autoconfigure: true
        tags: [serializer.normalizer]

    base.entity.listener:
        class: App\EventListener\BaseEntityListener
        tags:
            - { name: doctrine.orm.entity_listener, event: preFlush, method: preFlush }
            - { name: doctrine.orm.entity_listener, event: preUpdate, method: preUpdate }

    event.entity.listener:
        class: App\EventListener\EventEntityListener
        tags:
            - { name: doctrine.orm.entity_listener, event: prePersist, method: prePersist }
            - { name: doctrine.orm.entity_listener, event: preUpdate, method: preUpdate }
            - { name: doctrine.orm.entity_listener, event: preRemove, method: preRemove }
        arguments:
            $adminEmail: 'info@bnp.ba'

